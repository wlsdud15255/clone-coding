* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  background-color: black;
}

.container {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);

  /* 
  3. perspective : 하위 태그에 원근감을 주는 속성으로
  수치가 클 수록 높은 원근감을 준다
  */
  perspective: 1000px;
}

.flip-btn {
  width: 200px;
  height: 100px;

  /* 
  상위 태그의 효과를 적용받는 원칙을 이용해서 
  하위 태그인 프론트, 벡 글자를 상위 클래스에서 한번에 적용시켜 글자색과 위치 조절
  */
  color: white;
  text-align: center;
  line-height: 100px;

  /* 
  1. 글자 수직 중앙 정렬
  해당 컨텐츠(글자)의 요소 height 값이 line-height 값과 동일하면 수직 중앙 정렬 된다.

  ※ 한줄 텍스트일 경우에만 가능
  보통 중앙정렬 공식으로 외워도 무관 => text-align:center, line-height
  


  2. 2D요소를 3요소로 변환
  2D인 HTML 요소를 3D로 변환하게 해주는 css 기능이 있다.

  2-1. transform-style: preserve-3d;
  적용한 태그의 하위 태그들을 3D공간에 배치시킨다.
  */

  transform-style: preserve-3d;

  /*
   7. transition
    transition : 해당 시간 동안 변화를 줄거다.
    만약, 해당 효과를 hover 태그에 적용시키면, front에서 back으로 가는건 돌아가지만
    마우스를 벗어나면 회전이 아닌 그냥 front로 돌아온다!!!
  */
  transition: 0.5s;
  cursor: pointer;
}

.flip-btn:hover {
  transform: rotateX(-45deg);
}

.front {
  background-color: goldenrod;
  height: 100px;

  /* 
  ★ 6. 2차원에서 back 모형의 높이를 100px로 준 후 3차원으로 눕히면
  y축 기준선에서 모형의 반 크기인 50px이 앞과 뒤로 튀어나오는 형태이다.

  이를 맞춰주기 위해서는, front 박스를 모니터 방향인 z축 방향으로 이동시켜줘야 한다
  */
  transform: translateZ(50px);
}

.back {
  background-color: darkgoldenrod;
  height: 100px;

  /* 
  4. x축을 기준으로 회전이 되는 방식을 적용
  transform: rotateX(90deg);

  5. 3차원 공간을 형성 시 x,y,z의 기준 선이 달라지기 때문에
  back 도형을 위쪽으로 옮기기 위해서는 y축이 아닌 z축으로 이동 시켜줘야한다
  translateZ(150px)

  

   */

  transform: rotateX(90deg) translateZ(150px);
}
